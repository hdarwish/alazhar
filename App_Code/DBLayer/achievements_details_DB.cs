//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	NOURASULTAN\Eng Ahmed Soltaen using Mcit Generator
// Class Name:		achievements_details_DB
// Date Generated:	31-01-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


public static class achievements_details_DB
{

    #region "Private methods"

    private static achievements_details_DT FillInfoObject(SqlDataReader dr)
    {

        achievements_details_DT obj_achievements_details_DT = new achievements_details_DT();


        obj_achievements_details_DT.id = Convert.ToInt32(dr[achievements_details_DT.Enum_achievements_details_DT.id.ToString()]);
        obj_achievements_details_DT.char_id = dr[achievements_details_DT.Enum_achievements_details_DT.char_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[achievements_details_DT.Enum_achievements_details_DT.char_id.ToString()]);
        obj_achievements_details_DT.lang_id = dr[achievements_details_DT.Enum_achievements_details_DT.lang_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[achievements_details_DT.Enum_achievements_details_DT.lang_id.ToString()]);
        obj_achievements_details_DT.details = dr[achievements_details_DT.Enum_achievements_details_DT.details.ToString()] == DBNull.Value ? null : Convert.ToString(dr[achievements_details_DT.Enum_achievements_details_DT.details.ToString()]);
        obj_achievements_details_DT.title = dr[achievements_details_DT.Enum_achievements_details_DT.title.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[achievements_details_DT.Enum_achievements_details_DT.title.ToString()]);
        obj_achievements_details_DT.date  = dr[achievements_details_DT.Enum_achievements_details_DT.date.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[achievements_details_DT.Enum_achievements_details_DT.date.ToString()]);

        return obj_achievements_details_DT;
    }

    private static SqlParameter[] GetParameters(achievements_details_DT obj)
    {
        SqlParameter[] parms = new SqlParameter[6];




        parms[0] = new SqlParameter(achievements_details_DT.Enum_achievements_details_DT.id.ToString(), obj.id);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(achievements_details_DT.Enum_achievements_details_DT.char_id.ToString(), obj.char_id);

        parms[2] = new SqlParameter(achievements_details_DT.Enum_achievements_details_DT.lang_id.ToString(), obj.lang_id);

        parms[3] = new SqlParameter(achievements_details_DT.Enum_achievements_details_DT.details.ToString(), obj.details);

        parms[4] = new SqlParameter(achievements_details_DT.Enum_achievements_details_DT.title.ToString(), obj.title);
        parms[5] = new SqlParameter(achievements_details_DT.Enum_achievements_details_DT.date.ToString(), obj.date);
        


        return parms;
    }

    #endregion

    #region "DB methods"

    public static int Save(achievements_details_DT obj)
    {
        try
        {
            SqlParameter[] parms = GetParameters(obj);

            SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "achievements_details_Save", parms);
            return Convert.ToInt32(parms[0].Value);
        }
        catch (Exception ex)
        {

            return -1;
        }
    }
    public static int SaveBy_CharID(achievements_details_DT obj)
    {
        try
        {
            SqlParameter[] parms = GetParameters(obj);

            SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "achievements_details_Save_ByCharId", parms);
            return Convert.ToInt32(parms[0].Value);
        }
        catch (Exception ex)
        {

            return -1;
        }
    }

    public static int Delete(int achievements_details_ID)
    {
        try
        {
            SqlHelper.ExecuteNonQuery(Database.ConnectionString, "achievements_details_Delete", achievements_details_ID);
            return achievements_details_ID;
        }
        catch (Exception ex)
        {

            return -1;
        }
    }

    public static DataTable SelectAll()
    {
        try
        {
            return SqlHelper.ExecuteDataset(Database.ConnectionString, "achievements_details_Select", 0).Tables[0];

        }
        catch (Exception ex)
        {

            return null;
        }
    }

    public static achievements_details_DT SelectByID(int achiev_id)
    {
        try
        {
            SqlDataReader drTableName;
            achievements_details_DT oInfo_achievements_details_DT = new achievements_details_DT();

            drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "achievements_details_Select", achiev_id);
            if (drTableName != null)
            {
                while (drTableName.Read())
                {
                    oInfo_achievements_details_DT = FillInfoObject(drTableName);
                }

                drTableName.Close();
            }
            return oInfo_achievements_details_DT;
        }
        catch (Exception ex)
        {

            return null;
        }
    }

    public static achievements_details_DT SelectBy_CharID(int char_id, int lang_id)
    {try
        {
            SqlDataReader drTableName;
            achievements_details_DT oInfo_achievements_details_DT = new achievements_details_DT();

            drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "achievements_details_ByChar_Select", char_id, lang_id);
            if (drTableName != null)
            {
                while (drTableName.Read())
                {
                    oInfo_achievements_details_DT = FillInfoObject(drTableName);
                }

                drTableName.Close();
            }
            return oInfo_achievements_details_DT;
        }
        //try
        //{
        //    return SqlHelper.ExecuteDataset(Database.ConnectionString, "achievements_details_ByChar_Select", char_id, lang_id).Tables[0];

        //}
        catch (Exception ex)
        {

            return null;
        }
    }

    #endregion "DB methods"
}


    

