//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\hdarwish using Mcit Generator
// Class Name:		places_architecture_style_DB
// Date Generated:	11-07-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class places_architecture_style_DB
    {

        #region "Private methods"

        private static places_architecture_style_DT FillInfoObject(SqlDataReader dr)
        {

           places_architecture_style_DT obj_places_architecture_style_DT = new places_architecture_style_DT();

           
		obj_places_architecture_style_DT.id = Convert.ToInt32(dr[places_architecture_style_DT.Enum_places_architecture_style_DT.id.ToString()]);
		obj_places_architecture_style_DT.place_id = dr[places_architecture_style_DT.Enum_places_architecture_style_DT.place_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[places_architecture_style_DT.Enum_places_architecture_style_DT.place_id.ToString()]);
		obj_places_architecture_style_DT.architectural_styles_type = dr[places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type.ToString()]);
		obj_places_architecture_style_DT.architectural_element = dr[places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_element.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_element.ToString()]);
		obj_places_architecture_style_DT.architectural_styles_type_general_feature = dr[places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type_general_feature.ToString()] == DBNull.Value ? null : Convert.ToString(dr[places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type_general_feature.ToString()]);
		obj_places_architecture_style_DT.architectural_styles_type_general_feature_en = dr[places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type_general_feature_en.ToString()] == DBNull.Value ? null : Convert.ToString(dr[places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type_general_feature_en.ToString()]);
		obj_places_architecture_style_DT.architectural_styles_type_general_feature_fr = dr[places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type_general_feature_fr.ToString()] == DBNull.Value ? null : Convert.ToString(dr[places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type_general_feature_fr.ToString()]);
		obj_places_architecture_style_DT.architectural_styles_type_notes = dr[places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type_notes.ToString()] == DBNull.Value ? null : Convert.ToString(dr[places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type_notes.ToString()]);
		obj_places_architecture_style_DT.architectural_styles_type_other = dr[places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type_other.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type_other.ToString()]);
		obj_places_architecture_style_DT.architectural_element_other = dr[places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_element_other.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_element_other.ToString()]);

           return obj_places_architecture_style_DT;
        }

        private static SqlParameter[] GetParameters(places_architecture_style_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[10];
           
			
        

        parms[0] = new SqlParameter(places_architecture_style_DT.Enum_places_architecture_style_DT.id.ToString(), obj.id);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(places_architecture_style_DT.Enum_places_architecture_style_DT.place_id.ToString(), obj.place_id);

        parms[2] = new SqlParameter(places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type.ToString(), obj.architectural_styles_type);

        parms[3] = new SqlParameter(places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_element.ToString(), obj.architectural_element);

        parms[4] = new SqlParameter(places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type_general_feature.ToString(), obj.architectural_styles_type_general_feature);

        parms[5] = new SqlParameter(places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type_general_feature_en.ToString(), obj.architectural_styles_type_general_feature_en);

        parms[6] = new SqlParameter(places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type_general_feature_fr.ToString(), obj.architectural_styles_type_general_feature_fr);

        parms[7] = new SqlParameter(places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type_notes.ToString(), obj.architectural_styles_type_notes);

        parms[8] = new SqlParameter(places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_styles_type_other.ToString(), obj.architectural_styles_type_other);

        parms[9] = new SqlParameter(places_architecture_style_DT.Enum_places_architecture_style_DT.architectural_element_other.ToString(), obj.architectural_element_other);
            
            return parms;
        }

        #endregion

	    #region "DB methods"

        public static int Save(places_architecture_style_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "places_architecture_style_Save", parms);

             	    obj.id = Convert.ToInt32(parms[0].Value) ; 

           return obj.id ;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int places_architecture_style_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "places_architecture_style_Delete", places_architecture_style_ID);
                return places_architecture_style_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll()
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "places_architecture_style_Select", 0).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static places_architecture_style_DT SelectByID(int places_architecture_style_ID)
        {
            try
            {
              if (places_architecture_style_ID > 0)
                {
                SqlDataReader drTableName;
                places_architecture_style_DT oInfo_places_architecture_style_DT = new places_architecture_style_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "places_architecture_style_Select", places_architecture_style_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_places_architecture_style_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_places_architecture_style_DT;
               }
                else
                    return new places_architecture_style_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }
	#endregion


    }

