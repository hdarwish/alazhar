//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\arezk using Mcit Generator
// Class Name:		contents_timeline_details_DB
// Date Generated:	20-02-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class contents_timeline_details_DB
    {

        #region "Private methods"

        private static contents_timeline_details_DT FillInfoObject(SqlDataReader dr)
        {

           contents_timeline_details_DT obj_contents_timeline_details_DT = new contents_timeline_details_DT();

           
		obj_contents_timeline_details_DT.related_places = dr[contents_timeline_details_DT.Enum_contents_timeline_details_DT.related_places.ToString()] == DBNull.Value ? null : Convert.ToString(dr[contents_timeline_details_DT.Enum_contents_timeline_details_DT.related_places.ToString()]);
		obj_contents_timeline_details_DT.other_dates = dr[contents_timeline_details_DT.Enum_contents_timeline_details_DT.other_dates.ToString()] == DBNull.Value ? null : Convert.ToString(dr[contents_timeline_details_DT.Enum_contents_timeline_details_DT.other_dates.ToString()]);
		obj_contents_timeline_details_DT.id = Convert.ToInt32(dr[contents_timeline_details_DT.Enum_contents_timeline_details_DT.id.ToString()]);
		obj_contents_timeline_details_DT.timeline_id = dr[contents_timeline_details_DT.Enum_contents_timeline_details_DT.timeline_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[contents_timeline_details_DT.Enum_contents_timeline_details_DT.timeline_id.ToString()]);
		obj_contents_timeline_details_DT.lang_id = dr[contents_timeline_details_DT.Enum_contents_timeline_details_DT.lang_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[contents_timeline_details_DT.Enum_contents_timeline_details_DT.lang_id.ToString()]);

           return obj_contents_timeline_details_DT;
        }

        private static SqlParameter[] GetParameters(contents_timeline_details_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[5];
           
			

        parms[0] = new SqlParameter(contents_timeline_details_DT.Enum_contents_timeline_details_DT.related_places.ToString(), obj.related_places);

        parms[1] = new SqlParameter(contents_timeline_details_DT.Enum_contents_timeline_details_DT.other_dates.ToString(), obj.other_dates);
        

        parms[2] = new SqlParameter(contents_timeline_details_DT.Enum_contents_timeline_details_DT.id.ToString(), obj.id);
        parms[2].Direction = ParameterDirection.InputOutput;

        parms[3] = new SqlParameter(contents_timeline_details_DT.Enum_contents_timeline_details_DT.timeline_id.ToString(), obj.timeline_id);

        parms[4] = new SqlParameter(contents_timeline_details_DT.Enum_contents_timeline_details_DT.lang_id.ToString(), obj.lang_id);
            
            return parms;
        }

        #endregion

	#region "DB methods"

        public static int Save(contents_timeline_details_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "contents_timeline_details_Save", parms);
                return Convert.ToInt32(parms[0].Value);
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int contents_timeline_details_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "contents_timeline_details_Delete", contents_timeline_details_ID);
                return contents_timeline_details_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll()
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "contents_timeline_details_Select", 0).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static contents_timeline_details_DT SelectByID(int contents_timeline_details_ID)
        {
            try
            {
                SqlDataReader drTableName;
                contents_timeline_details_DT oInfo_contents_timeline_details_DT = new contents_timeline_details_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "contents_timeline_details_Select", contents_timeline_details_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_contents_timeline_details_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_contents_timeline_details_DT;
            }
            catch (Exception ex)
            {

                return null;
            }
        }
	#endregion


    }

