//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\hdarwish using Mcit Generator
// Class Name:		contents_errors_DB
// Date Generated:	19-02-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


public static class contents_errors_DB
{

    #region "Private methods"

    private static contents_errors_DT FillInfoObject(SqlDataReader dr)
    {

        contents_errors_DT obj_contents_errors_DT = new contents_errors_DT();


        obj_contents_errors_DT.id = Convert.ToInt32(dr[contents_errors_DT.Enum_contents_errors_DT.id.ToString()]);
        obj_contents_errors_DT.content_type = dr[contents_errors_DT.Enum_contents_errors_DT.content_type.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[contents_errors_DT.Enum_contents_errors_DT.content_type.ToString()]);
        obj_contents_errors_DT.form_file = dr[contents_errors_DT.Enum_contents_errors_DT.form_file.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[contents_errors_DT.Enum_contents_errors_DT.form_file.ToString()]);
        obj_contents_errors_DT.error_name = dr[contents_errors_DT.Enum_contents_errors_DT.error_name.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[contents_errors_DT.Enum_contents_errors_DT.error_name.ToString()]);

        return obj_contents_errors_DT;
    }

    private static SqlParameter[] GetParameters(contents_errors_DT obj)
    {
        SqlParameter[] parms = new SqlParameter[4];




        parms[0] = new SqlParameter(contents_errors_DT.Enum_contents_errors_DT.id.ToString(), obj.id);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(contents_errors_DT.Enum_contents_errors_DT.content_type.ToString(), obj.content_type);

        parms[2] = new SqlParameter(contents_errors_DT.Enum_contents_errors_DT.form_file.ToString(), obj.form_file);

        parms[3] = new SqlParameter(contents_errors_DT.Enum_contents_errors_DT.error_name.ToString(), obj.error_name);

        return parms;
    }

    #endregion

    #region "DB methods"

    public static int Save(contents_errors_DT obj)
    {
        try
        {
            SqlParameter[] parms = GetParameters(obj);

            SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "contents_errors_Save", parms);
            return Convert.ToInt32(parms[0].Value);
        }
        catch (Exception ex)
        {

            return -1;
        }
    }

    public static int Delete(int contents_errors_ID)
    {
        try
        {
            SqlHelper.ExecuteNonQuery(Database.ConnectionString, "contents_errors_Delete", contents_errors_ID);
            return contents_errors_ID;
        }
        catch (Exception ex)
        {

            return -1;
        }
    }

    public static DataTable SelectAll()
    {
        try
        {
            return SqlHelper.ExecuteDataset(Database.ConnectionString, "contents_errors_Select", 0).Tables[0];

        }
        catch (Exception ex)
        {

            return null;
        }
    }

    public static DataTable SelectByForm_File()
    {
        try
        {

            return SqlHelper.ExecuteDataset(Database.ConnectionString, "contents_errors_Select_byconttype").Tables[0];
        }
        catch (Exception ex)
        {

            return null;
        }
    }

    public static DataTable SelectByID(int contents_errors_ID)
    {
        try
        {

            return SqlHelper.ExecuteDataset(Database.ConnectionString, "contents_errors_Select", contents_errors_ID).Tables[0];
        }
        catch (Exception ex)
        {

            return null;
        }
    #endregion

    }
}

