//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\nmsoltan using Mcit Generator
// Class Name:		contents_fields_DB
// Date Generated:	19-07-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class contents_fields_DB
    {

        #region "Private methods"

        private static contents_fields_DT FillInfoObject(SqlDataReader dr)
        {

           contents_fields_DT obj_contents_fields_DT = new contents_fields_DT();

           
		obj_contents_fields_DT.id = Convert.ToInt32(dr[contents_fields_DT.Enum_contents_fields_DT.id.ToString()]);
		obj_contents_fields_DT.content_type = dr[contents_fields_DT.Enum_contents_fields_DT.content_type.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[contents_fields_DT.Enum_contents_fields_DT.content_type.ToString()]);
		obj_contents_fields_DT.translation = dr[contents_fields_DT.Enum_contents_fields_DT.translation.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[contents_fields_DT.Enum_contents_fields_DT.translation.ToString()]);
		obj_contents_fields_DT.field_name = dr[contents_fields_DT.Enum_contents_fields_DT.field_name.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[contents_fields_DT.Enum_contents_fields_DT.field_name.ToString()]);
		obj_contents_fields_DT.control_name = dr[contents_fields_DT.Enum_contents_fields_DT.control_name.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[contents_fields_DT.Enum_contents_fields_DT.control_name.ToString()]);
		obj_contents_fields_DT.type = dr[contents_fields_DT.Enum_contents_fields_DT.type.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[contents_fields_DT.Enum_contents_fields_DT.type.ToString()]);

           return obj_contents_fields_DT;
        }

        private static SqlParameter[] GetParameters(contents_fields_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[6];
           
			
        

        parms[0] = new SqlParameter(contents_fields_DT.Enum_contents_fields_DT.id.ToString(), obj.id);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(contents_fields_DT.Enum_contents_fields_DT.content_type.ToString(), obj.content_type);

        parms[2] = new SqlParameter(contents_fields_DT.Enum_contents_fields_DT.translation.ToString(), obj.translation);

        parms[3] = new SqlParameter(contents_fields_DT.Enum_contents_fields_DT.field_name.ToString(), obj.field_name);

        parms[4] = new SqlParameter(contents_fields_DT.Enum_contents_fields_DT.control_name.ToString(), obj.control_name);

        parms[5] = new SqlParameter(contents_fields_DT.Enum_contents_fields_DT.type.ToString(), obj.type);
            
            return parms;
        }

        #endregion

	    #region "DB methods"

        public static int Save(contents_fields_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "contents_fields_Save", parms);

             	    obj.id = Convert.ToInt32(parms[0].Value) ; 

           return obj.id ;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int contents_fields_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "contents_fields_Delete", contents_fields_ID);
                return contents_fields_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll()
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "contents_fields_Select", 0).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static DataTable SelectByCont_type(int id)
        {
            try
            {

                return SqlHelper.ExecuteDataset(Database.ConnectionString, "contents_fields_Select_Bycontenttype", id , menus_update.get_current_lang()).Tables[0];
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static contents_fields_DT SelectByID(int contents_fields_ID)
        {
            try
            {
              if (contents_fields_ID > 0)
                {
                SqlDataReader drTableName;
                contents_fields_DT oInfo_contents_fields_DT = new contents_fields_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "contents_fields_Select", contents_fields_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_contents_fields_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_contents_fields_DT;
               }
                else
                    return new contents_fields_DT();
            }
            catch (Exception ex)
            {

                return null;
            }
        }
	#endregion


    }

