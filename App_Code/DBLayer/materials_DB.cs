//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\nmsoltan using Mcit Generator
// Class Name:		materials_DB
// Date Generated:	01-02-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class materials_DB
    {

        #region "Private methods"

        private static materials_DT FillInfoObject(SqlDataReader dr)
        {

           materials_DT obj_materials_DT = new materials_DT();

           
		obj_materials_DT.id = Convert.ToInt32(dr[materials_DT.Enum_materials_DT.id.ToString()]);
		obj_materials_DT.content_type = dr[materials_DT.Enum_materials_DT.content_type.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[materials_DT.Enum_materials_DT.content_type.ToString()]);
		obj_materials_DT.title_ar = dr[materials_DT.Enum_materials_DT.title_ar.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[materials_DT.Enum_materials_DT.title_ar.ToString()]);
		obj_materials_DT.title_en = dr[materials_DT.Enum_materials_DT.title_en.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[materials_DT.Enum_materials_DT.title_en.ToString()]);
		obj_materials_DT.title_fr = dr[materials_DT.Enum_materials_DT.title_fr.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[materials_DT.Enum_materials_DT.title_fr.ToString()]);
		obj_materials_DT.image = dr[materials_DT.Enum_materials_DT.image.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[materials_DT.Enum_materials_DT.image.ToString()]);

           return obj_materials_DT;
        }

        private static SqlParameter[] GetParameters(materials_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[6];
           
			
        

        parms[0] = new SqlParameter(materials_DT.Enum_materials_DT.id.ToString(), obj.id);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(materials_DT.Enum_materials_DT.content_type.ToString(), obj.content_type);

        parms[2] = new SqlParameter(materials_DT.Enum_materials_DT.title_ar.ToString(), obj.title_ar);

        parms[3] = new SqlParameter(materials_DT.Enum_materials_DT.title_en.ToString(), obj.title_en);

        parms[4] = new SqlParameter(materials_DT.Enum_materials_DT.title_fr.ToString(), obj.title_fr);

        parms[5] = new SqlParameter(materials_DT.Enum_materials_DT.image.ToString(), obj.image);
            
            return parms;
        }

        #endregion

	#region "DB methods"

        public static int Save(materials_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "materials_Save", parms);
                return Convert.ToInt32(parms[0].Value);
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int materials_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "materials_Delete", materials_ID);
                return materials_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll()
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "materials_Select", 0).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }


        public static DataTable SelectByContent_Type(int id)
        {
            try
            {
                return SqlHelper.ExecuteDataset(Database.ConnectionString, "materials_Select_type",id).Tables[0];

            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static materials_DT SelectByID(int materials_ID)
        {
            try
            {
                SqlDataReader drTableName;
                materials_DT oInfo_materials_DT = new materials_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "materials_Select", materials_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_materials_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_materials_DT;
            }
            catch (Exception ex)
            {

                return null;
            }
        }
	#endregion


    }

