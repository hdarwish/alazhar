//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\arezk using Mcit Generator
// Class Name:		users_DB
// Date Generated:	20-02-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class users_DB
    {

        #region "Private methods"

        private static users_DT FillInfoObject(SqlDataReader dr)
        {

           users_DT obj_users_DT = new users_DT();

           
		obj_users_DT.id = Convert.ToInt32(dr[users_DT.Enum_users_DT.id.ToString()]);
		obj_users_DT.user_type = dr[users_DT.Enum_users_DT.user_type.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[users_DT.Enum_users_DT.user_type.ToString()]);
		obj_users_DT.char_assign = dr[users_DT.Enum_users_DT.char_assign.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[users_DT.Enum_users_DT.char_assign.ToString()]);
		obj_users_DT.event_assign = dr[users_DT.Enum_users_DT.event_assign.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[users_DT.Enum_users_DT.event_assign.ToString()]);
		obj_users_DT.topics_assign = dr[users_DT.Enum_users_DT.topics_assign.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[users_DT.Enum_users_DT.topics_assign.ToString()]);
		obj_users_DT.video_assign = dr[users_DT.Enum_users_DT.video_assign.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[users_DT.Enum_users_DT.video_assign.ToString()]);
		obj_users_DT.audio_assign = dr[users_DT.Enum_users_DT.audio_assign.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[users_DT.Enum_users_DT.audio_assign.ToString()]);
		obj_users_DT.doc_assign = dr[users_DT.Enum_users_DT.doc_assign.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[users_DT.Enum_users_DT.doc_assign.ToString()]);
		obj_users_DT.article_assign = dr[users_DT.Enum_users_DT.article_assign.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[users_DT.Enum_users_DT.article_assign.ToString()]);
		obj_users_DT.book_assign = dr[users_DT.Enum_users_DT.book_assign.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[users_DT.Enum_users_DT.book_assign.ToString()]);
		obj_users_DT.images_assign = dr[users_DT.Enum_users_DT.images_assign.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[users_DT.Enum_users_DT.images_assign.ToString()]);
		obj_users_DT.name = dr[users_DT.Enum_users_DT.name.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[users_DT.Enum_users_DT.name.ToString()]);
		obj_users_DT.username = dr[users_DT.Enum_users_DT.username.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[users_DT.Enum_users_DT.username.ToString()]);
		obj_users_DT.password = dr[users_DT.Enum_users_DT.password.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[users_DT.Enum_users_DT.password.ToString()]);
		obj_users_DT.E_mail = dr[users_DT.Enum_users_DT.E_mail.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[users_DT.Enum_users_DT.E_mail.ToString()]);
		obj_users_DT.mobile = dr[users_DT.Enum_users_DT.mobile.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[users_DT.Enum_users_DT.mobile.ToString()]);
		obj_users_DT.title = dr[users_DT.Enum_users_DT.title.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[users_DT.Enum_users_DT.title.ToString()]);

           return obj_users_DT;
        }

        private static SqlParameter[] GetParameters(users_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[17];
           
			
        

        parms[0] = new SqlParameter(users_DT.Enum_users_DT.id.ToString(), obj.id);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(users_DT.Enum_users_DT.user_type.ToString(), obj.user_type);

        parms[2] = new SqlParameter(users_DT.Enum_users_DT.char_assign.ToString(), obj.char_assign);

        parms[3] = new SqlParameter(users_DT.Enum_users_DT.event_assign.ToString(), obj.event_assign);

        parms[4] = new SqlParameter(users_DT.Enum_users_DT.topics_assign.ToString(), obj.topics_assign);

        parms[5] = new SqlParameter(users_DT.Enum_users_DT.video_assign.ToString(), obj.video_assign);

        parms[6] = new SqlParameter(users_DT.Enum_users_DT.audio_assign.ToString(), obj.audio_assign);

        parms[7] = new SqlParameter(users_DT.Enum_users_DT.doc_assign.ToString(), obj.doc_assign);

        parms[8] = new SqlParameter(users_DT.Enum_users_DT.article_assign.ToString(), obj.article_assign);

        parms[9] = new SqlParameter(users_DT.Enum_users_DT.book_assign.ToString(), obj.book_assign);

        parms[10] = new SqlParameter(users_DT.Enum_users_DT.images_assign.ToString(), obj.images_assign);

        parms[11] = new SqlParameter(users_DT.Enum_users_DT.name.ToString(), obj.name);

        parms[12] = new SqlParameter(users_DT.Enum_users_DT.username.ToString(), obj.username);

        parms[13] = new SqlParameter(users_DT.Enum_users_DT.password.ToString(), obj.password);

        parms[14] = new SqlParameter(users_DT.Enum_users_DT.E_mail.ToString(), obj.E_mail);

        parms[15] = new SqlParameter(users_DT.Enum_users_DT.mobile.ToString(), obj.mobile);

        parms[16] = new SqlParameter(users_DT.Enum_users_DT.title.ToString(), obj.title);
            
            return parms;
        }

        #endregion

	#region "DB methods"

        public static int Save(users_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "users_Save", parms);
                return Convert.ToInt32(parms[0].Value);
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int users_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "users_Delete", users_ID);
                return users_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll()
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "users_Select", 0).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static users_DT SelectByID(int users_ID)
        {
            try
            {
                SqlDataReader drTableName;
                users_DT oInfo_users_DT = new users_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "users_Select", users_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_users_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_users_DT;
            }
            catch (Exception ex)
            {

                return null;
            }
        }
	#endregion


    }

