//////////////////////////////////////////////////////////////////////////////////////////
// Generated By:	MCIT\arezk using Mcit Generator
// Class Name:		contents_relations_DB
// Date Generated:	20-02-2012
//////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Data.SqlClient;
using System.Data;


    public static class contents_relations_DB
    {

        #region "Private methods"

        private static contents_relations_DT FillInfoObject(SqlDataReader dr)
        {

           contents_relations_DT obj_contents_relations_DT = new contents_relations_DT();

           
		obj_contents_relations_DT.id = Convert.ToInt32(dr[contents_relations_DT.Enum_contents_relations_DT.id.ToString()]);
		obj_contents_relations_DT.content_type1 = dr[contents_relations_DT.Enum_contents_relations_DT.content_type1.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[contents_relations_DT.Enum_contents_relations_DT.content_type1.ToString()]);
		obj_contents_relations_DT.content_type2 = dr[contents_relations_DT.Enum_contents_relations_DT.content_type2.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[contents_relations_DT.Enum_contents_relations_DT.content_type2.ToString()]);
		obj_contents_relations_DT.content_id1 = dr[contents_relations_DT.Enum_contents_relations_DT.content_id1.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[contents_relations_DT.Enum_contents_relations_DT.content_id1.ToString()]);
		obj_contents_relations_DT.content_id2 = dr[contents_relations_DT.Enum_contents_relations_DT.content_id2.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[contents_relations_DT.Enum_contents_relations_DT.content_id2.ToString()]);
		obj_contents_relations_DT.relation_id = dr[contents_relations_DT.Enum_contents_relations_DT.relation_id.ToString()] == DBNull.Value ? 0 : Convert.ToInt32(dr[contents_relations_DT.Enum_contents_relations_DT.relation_id.ToString()]);
		obj_contents_relations_DT.other_relation_ar = dr[contents_relations_DT.Enum_contents_relations_DT.other_relation_ar.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[contents_relations_DT.Enum_contents_relations_DT.other_relation_ar.ToString()]);
		obj_contents_relations_DT.other_relation_en = dr[contents_relations_DT.Enum_contents_relations_DT.other_relation_en.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[contents_relations_DT.Enum_contents_relations_DT.other_relation_en.ToString()]);
		obj_contents_relations_DT.other_relation_fr = dr[contents_relations_DT.Enum_contents_relations_DT.other_relation_fr.ToString()] == DBNull.Value ? string.Empty : Convert.ToString(dr[contents_relations_DT.Enum_contents_relations_DT.other_relation_fr.ToString()]);

           return obj_contents_relations_DT;
        }

        private static SqlParameter[] GetParameters(contents_relations_DT obj)
        {
            SqlParameter[] parms = new SqlParameter[9];
           
			
        

        parms[0] = new SqlParameter(contents_relations_DT.Enum_contents_relations_DT.id.ToString(), obj.id);
        parms[0].Direction = ParameterDirection.InputOutput;

        parms[1] = new SqlParameter(contents_relations_DT.Enum_contents_relations_DT.content_type1.ToString(), obj.content_type1);

        parms[2] = new SqlParameter(contents_relations_DT.Enum_contents_relations_DT.content_type2.ToString(), obj.content_type2);

        parms[3] = new SqlParameter(contents_relations_DT.Enum_contents_relations_DT.content_id1.ToString(), obj.content_id1);

        parms[4] = new SqlParameter(contents_relations_DT.Enum_contents_relations_DT.content_id2.ToString(), obj.content_id2);

        parms[5] = new SqlParameter(contents_relations_DT.Enum_contents_relations_DT.relation_id.ToString(), obj.relation_id);

        parms[6] = new SqlParameter(contents_relations_DT.Enum_contents_relations_DT.other_relation_ar.ToString(), obj.other_relation_ar);

        parms[7] = new SqlParameter(contents_relations_DT.Enum_contents_relations_DT.other_relation_en.ToString(), obj.other_relation_en);

        parms[8] = new SqlParameter(contents_relations_DT.Enum_contents_relations_DT.other_relation_fr.ToString(), obj.other_relation_fr);
            
            return parms;
        }

        #endregion

	#region "DB methods"

        public static int Save(contents_relations_DT obj)
        {
            try
            {
                SqlParameter[] parms = GetParameters(obj);

                SqlHelper.ExecuteScalar(Database.ConnectionString, CommandType.StoredProcedure, "contents_relations_Save", parms);
                return Convert.ToInt32(parms[0].Value);
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static int Delete(int contents_relations_ID)
        {
            try
            {
                SqlHelper.ExecuteNonQuery(Database.ConnectionString, "contents_relations_Delete", contents_relations_ID);
                return contents_relations_ID;
            }
            catch (Exception ex)
            {

                return -1;
            }
        }

        public static DataTable SelectAll()
        {
            try
            {
				 return SqlHelper.ExecuteDataset(Database.ConnectionString, "contents_relations_Select", 0).Tables[0];
		
            }
            catch (Exception ex)
            {

                return null;
            }
        }

        public static contents_relations_DT SelectByID(int contents_relations_ID)
        {
            try
            {
                SqlDataReader drTableName;
                contents_relations_DT oInfo_contents_relations_DT = new contents_relations_DT();

                drTableName = SqlHelper.ExecuteReader(Database.ConnectionString, "contents_relations_Select", contents_relations_ID);
                if (drTableName != null)
                {
                    while (drTableName.Read())
                    {
                        oInfo_contents_relations_DT = FillInfoObject(drTableName);
                    }

                    drTableName.Close();
                }
                return oInfo_contents_relations_DT;
            }
            catch (Exception ex)
            {

                return null;
            }
        }
        public static DataTable SelectByIDType(int contents_relations_ID, int contents_relations_type)
        {
            try
            {
                return SqlHelper.ExecuteDataset(Database.ConnectionString, "contents_relations_Select_by_idType", contents_relations_ID, contents_relations_type).Tables[0];

            }
            catch (Exception ex)
            {

                return null;
            }
        }
        public static DataTable SelectSupportByIDType(int contents_relations_ID, int contents_relations_type)
        {
            try
            {
                return SqlHelper.ExecuteDataset(Database.ConnectionString, "contents_support_relations_Select_by_idType", contents_relations_ID, contents_relations_type).Tables[0];

            }
            catch (Exception ex)
            {

                return null;
            }
        }
        
	#endregion


    }

